@import "functions";
@import "variable";
@import "mixins";



@font-face {
  font-family: Work_Sans;
  src: url("../assets/Work_Sans/WorkSans-VariableFont_wght.ttf");
}

body{
  font-family: Work_Sans;
  overflow:hidden;
}



@each $name,$color in $pallete {
  @for $i from 1 to 5 {
    .border-#{$name}-#{$i} {
      border: #{$i}px $color solid !important;

    }

  }
  .#{$name}-error {
    span {
      color:$color !important;
    }
  }
    .text-#{$name} {
      color: $color !important;

    }

    .bg-#{$name} {
      background-color:  $color  !important;

    }
    .hover-#{$name}{
     &:hover{
      color: $color !important;
     }
    }
    .hover-bg-#{$name}{
      &:hover{
        background-color: $color !important;
      }
    }
    .hover-border-#{$name}{
     &:hover{
      border-bottom: 1px $color !important;
     }
    }

  }

  @for $i from 1 to 8{

    .mt-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      margin-top: #{$space} !important;
    }
    .font-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      font-size: #{$space} !important;
    }
    .ml-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      margin-left: #{$space} !important;
    }
    .mr-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      margin-right: #{$space} !important;
    }
    .mb-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      margin-bottom: #{$space} !important;
    }
    .mx-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      margin-left: #{$space} !important;
      margin-right: #{$space} !important;
    }
    .my-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      margin-top: #{$space} !important;
      margin-bottom: #{$space} !important;
    }
    .m-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      margin: #{$space} !important;
    }
    .pt-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      padding-top: #{$space} !important;
    }
    .pl-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      padding-left: #{$space} !important;
    }
    .pr-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      padding-right: #{$space} !important;
    }
    .pb-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      padding-bottom: #{$space} !important;
    }
    .px-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      padding-left: #{$space} !important;
      padding-right: #{$space} !important;
    }
    .py-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      padding-top: #{$space} !important;
      padding-bottom: #{$space} !important;
    }
    .p-#{$i}{
      $space:.25rem*$i;
      @debug "mt-#{$i}  #{$space}";
      padding: #{$space} !important;
    }

  }

.srcoll{
  overflow:scroll;
}
.srcoll-hidden{
  overflow: hidden;
}

.text-white {
  color: get-theme-color(white) !important;

}

.text-lg {
  font-size: 2.5rem !important;
}

.text-sm {
  font-size: 1rem !important;
}

.text-weight-medium {
  font-weight: 400;
}
.text-weight-bold {
  font-weight: bold;
}

.font-team {
  font-family: Work_Sans;
}

.text-brand {
  font-size: 3rem !important;
}






.capitalize {
  text-transform: capitalize;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

a {
  text-transform: none;
}

.center-child {
  display: flex;
  align-items: center;
  justify-content: center !important;
}

.align-children-center {
  display: flex;
  align-items: center;
  justify-content: start !important;
}

.container-flex{
  display: flex;
}
.column{
  flex-direction: column;
}
.justify-content-center{
  justify-content: center;
}
.justify-content-start{
  justify-content: flex-start;
}
.justify-content-end{
  justify-content: flex-end;
}
.justify-content-between{
  justify-content: space-between;
}
.justify-content-around{
  justify-content: space-around;
}
.align-items-center{
  align-items: center;
}
.align-items-start{
  align-items: flex-start;
}
.align-items-end{
  align-items: flex-end;
}
.align-items-between{
  align-items: space-between;
}
.justify-content-around{
  justify-content: space-around;
}
.container{
  display: grid;
}
.h-100vh
{
  height: 100vh;
}
.w-100vw{
  width: 100vw;
}
.h-100
{
  height: 100%;
}
.w-100{
  width: 100%;
}


@for $i from 1 to 13 {
  .span-#{$i}{
    grid-column: span $i;
  }
  .template-columns-#{$i}{
    grid-template-columns: repeat($i,1fr);

  }
}
